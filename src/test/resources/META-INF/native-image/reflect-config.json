[
    {
        "name": "[Ljava.lang.Object;"
    },
    {
        "name": "[Ljava.lang.constant.ClassDesc;"
    },
    {
        "name": "[Ljava.lang.constant.ConstantDesc;"
    },
    {
        "allDeclaredClasses": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "test",
                "parameterTypes": [
                    
                ]
            }
        ],
        "name": "com.github.mizosoft.pg.MockitoTest",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.tools.attach.VirtualMachine"
    },
    {
        "name": "java.io.Serializable",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "java.lang.Class",
        "methods": [
            {
                "name": "forName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getAnnotatedInterfaces",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getAnnotatedSuperclass",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getDeclaredMethod",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Class[]"
                ]
            },
            {
                "name": "getMethod",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Class[]"
                ]
            },
            {
                "name": "getModule",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getNestHost",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getNestMembers",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getPermittedSubclasses",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getRecordComponents",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "isNestmateOf",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "isRecord",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "isSealed",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.ClassLoader",
        "methods": [
            {
                "name": "getDefinedPackage",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getUnnamedModule",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "registerAsParallelCapable",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.Comparable",
        "allDeclaredClasses": true,
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "java.lang.Enum"
    },
    {
        "name": "java.lang.Module",
        "methods": [
            {
                "name": "addExports",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Module"
                ]
            },
            {
                "name": "addReads",
                "parameterTypes": [
                    "java.lang.Module"
                ]
            },
            {
                "name": "canRead",
                "parameterTypes": [
                    "java.lang.Module"
                ]
            },
            {
                "name": "getClassLoader",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getName",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getPackages",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getResourceAsStream",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "isExported",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "isExported",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Module"
                ]
            },
            {
                "name": "isNamed",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "isOpen",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Module"
                ]
            }
        ]
    },
    {
        "name": "java.lang.Object",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "clone",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getClass",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "toString",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "allDeclaredClasses": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "children",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "compareTo",
                "parameterTypes": [
                    "java.lang.ProcessHandle"
                ]
            },
            {
                "name": "current",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "descendants",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "destroy",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "destroyForcibly",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "info",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "isAlive",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "onExit",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "parent",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "pid",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "supportsNormalTermination",
                "parameterTypes": [
                    
                ]
            }
        ],
        "name": "java.lang.ProcessHandle",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.Runtime",
        "methods": [
            {
                "name": "version",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.Runtime$Version",
        "methods": [
            {
                "name": "feature",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.StackWalker",
        "methods": [
            {
                "name": "getInstance",
                "parameterTypes": [
                    "java.lang.StackWalker$Option"
                ]
            },
            {
                "name": "walk",
                "parameterTypes": [
                    "java.util.function.Function"
                ]
            }
        ]
    },
    {
        "name": "java.lang.StackWalker$Option"
    },
    {
        "name": "java.lang.StackWalker$StackFrame",
        "methods": [
            {
                "name": "getDeclaringClass",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.System",
        "methods": [
            {
                "name": "getSecurityManager",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.Thread",
        "fields": [
            {
                "name": "threadLocalRandomProbe"
            }
        ]
    },
    {
        "name": "java.lang.WeakPairMap"
    },
    {
        "name": "java.lang.WeakPairMap$Pair"
    },
    {
        "name": "java.lang.WeakPairMap$Pair$Weak"
    },
    {
        "name": "java.lang.annotation.Retention",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.annotation.RetentionPolicy"
    },
    {
        "name": "java.lang.annotation.Target",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "java.lang.constant.ClassDesc",
        "methods": [
            {
                "name": "descriptorString",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "ofDescriptor",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.lang.constant.ConstantDesc"
    },
    {
        "name": "java.lang.constant.DirectMethodHandleDesc",
        "methods": [
            {
                "name": "lookupDescriptor",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "methodName",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "owner",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "refKind",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.constant.DirectMethodHandleDesc$Kind",
        "methods": [
            {
                "name": "valueOf",
                "parameterTypes": [
                    "int",
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "java.lang.constant.DynamicConstantDesc",
        "methods": [
            {
                "name": "bootstrapArgs",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "bootstrapMethod",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "constantName",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "constantType",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "ofCanonical",
                "parameterTypes": [
                    "java.lang.constant.DirectMethodHandleDesc",
                    "java.lang.String",
                    "java.lang.constant.ClassDesc",
                    "java.lang.constant.ConstantDesc[]"
                ]
            }
        ]
    },
    {
        "name": "java.lang.constant.MethodHandleDesc",
        "methods": [
            {
                "name": "invocationType",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "of",
                "parameterTypes": [
                    "java.lang.constant.DirectMethodHandleDesc$Kind",
                    "java.lang.constant.ClassDesc",
                    "java.lang.String",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.lang.constant.MethodTypeDesc",
        "methods": [
            {
                "name": "of",
                "parameterTypes": [
                    "java.lang.constant.ClassDesc",
                    "java.lang.constant.ClassDesc[]"
                ]
            },
            {
                "name": "ofDescriptor",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "parameterArray",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "returnType",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.instrument.Instrumentation",
        "methods": [
            {
                "name": "redefineModule",
                "parameterTypes": [
                    "java.lang.Module",
                    "java.util.Set",
                    "java.util.Map",
                    "java.util.Map",
                    "java.util.Set",
                    "java.util.Map"
                ]
            }
        ]
    },
    {
        "name": "java.lang.invoke.MethodHandle",
        "methods": [
            {
                "name": "bindTo",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "invokeWithArguments",
                "parameterTypes": [
                    "java.lang.Object[]"
                ]
            }
        ]
    },
    {
        "name": "java.lang.invoke.MethodHandles",
        "methods": [
            {
                "name": "lookup",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.invoke.MethodHandles$Lookup",
        "methods": [
            {
                "name": "findVirtual",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.String",
                    "java.lang.invoke.MethodType"
                ]
            }
        ]
    },
    {
        "name": "java.lang.invoke.MethodType",
        "methods": [
            {
                "name": "methodType",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.Class[]"
                ]
            }
        ]
    },
    {
        "name": "java.lang.reflect.AccessibleObject",
        "methods": [
            {
                "name": "setAccessible",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "java.lang.reflect.AnnotatedArrayType",
        "methods": [
            {
                "name": "getAnnotatedGenericComponentType",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.reflect.AnnotatedParameterizedType",
        "methods": [
            {
                "name": "getAnnotatedActualTypeArguments",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.reflect.AnnotatedType",
        "methods": [
            {
                "name": "getType",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.reflect.Executable",
        "methods": [
            {
                "name": "getAnnotatedExceptionTypes",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getAnnotatedParameterTypes",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getAnnotatedReceiverType",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getParameterCount",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getParameters",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.reflect.Method",
        "methods": [
            {
                "name": "getAnnotatedReturnType",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.reflect.Parameter",
        "methods": [
            {
                "name": "getModifiers",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getName",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "isNamePresent",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.reflect.TypeVariable",
        "methods": [
            {
                "name": "getAnnotatedBounds",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.security.AccessController",
        "methods": [
            {
                "name": "doPrivileged",
                "parameterTypes": [
                    "java.security.PrivilegedAction"
                ]
            },
            {
                "name": "doPrivileged",
                "parameterTypes": [
                    "java.security.PrivilegedExceptionAction"
                ]
            }
        ]
    },
    {
        "name": "java.security.SecureRandomParameters"
    },
    {
        "name": "java.util.HashSet"
    },
    {
        "name": "java.util.LinkedHashSet"
    },
    {
        "name": "java.util.concurrent.ArrayBlockingQueue"
    },
    {
        "name": "java.util.concurrent.ForkJoinTask",
        "fields": [
            {
                "name": "aux"
            },
            {
                "name": "status"
            }
        ]
    },
    {
        "name": "java.util.concurrent.atomic.AtomicBoolean",
        "fields": [
            {
                "name": "value"
            }
        ]
    },
    {
        "name": "java.util.concurrent.atomic.AtomicReference",
        "fields": [
            {
                "name": "value"
            }
        ]
    },
    {
        "name": "java.util.concurrent.atomic.Striped64",
        "fields": [
            {
                "name": "base"
            },
            {
                "name": "cellsBusy"
            }
        ]
    },
    {
        "name": "java.util.concurrent.locks.AbstractOwnableSynchronizer"
    },
    {
        "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer"
    },
    {
        "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
    },
    {
        "name": "java.util.concurrent.locks.ReentrantLock"
    },
    {
        "name": "java.util.concurrent.locks.ReentrantLock$NonfairSync"
    },
    {
        "name": "java.util.concurrent.locks.ReentrantLock$Sync"
    },
    {
        "name": "jdk.internal.ValueBased",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "jdk.internal.misc.Unsafe"
    },
    {
        "name": "kotlin.jvm.JvmInline"
    },
    {
        "name": "net.bytebuddy.agent.Installer",
        "methods": [
            {
                "name": "agentmain",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.instrument.Instrumentation"
                ]
            },
            {
                "name": "getInstrumentation",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.asm.Advice$AllArguments",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "includeSelf",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "nullIfEmpty",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "readOnly",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "typing",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.asm.Advice$Argument",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "optional",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "readOnly",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "typing",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "value",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.asm.Advice$Enter",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "readOnly",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "typing",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.asm.Advice$Exit",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.asm.Advice$FieldGetterHandle",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.asm.Advice$FieldSetterHandle",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.asm.Advice$Local",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.asm.Advice$OnMethodEnter",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "inline",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "prependLineNumber",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "skipOn",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "skipOnIndex",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "suppress",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.asm.Advice$OnMethodExit",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "backupArguments",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "inline",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "onThrowable",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "repeatOn",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "repeatOnIndex",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "suppress",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.asm.Advice$Origin",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.asm.Advice$Return",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "readOnly",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "typing",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.asm.Advice$SelfCallHandle",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.asm.Advice$This",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "optional",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "readOnly",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "typing",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.asm.Advice$Thrown",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType$OfFormalTypeVariable$FormalTypeVariable",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.AllArguments",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "includeSelf",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "nullIfEmpty",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "value",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.Argument",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "bindingMechanic",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "value",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic"
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.BindingPriority",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.Default",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.DefaultCall",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.DefaultCallHandle",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.DefaultMethod",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.DefaultMethodHandle",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.FieldGetterHandle",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.FieldSetterHandle",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.FieldValue",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "declaringType",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "value",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.Origin",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "cache",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "privileged",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.StubValue",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.Super",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.SuperCall",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "fallbackToDefault",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "nullIfImpossible",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "serializableProxy",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.SuperCallHandle",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.SuperMethod",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.SuperMethodHandle",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "net.bytebuddy.implementation.bind.annotation.This",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "optional",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.utility.Invoker",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.utility.Invoker$Dispatcher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfClassDesc",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDirectMethodHandleDesc",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDirectMethodHandleDesc$ForKind",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDynamicConstantDesc",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfMethodHandleDesc",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfMethodTypeDesc",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.utility.JavaModule$Module",
        "queryAllPublicMethods": true
    },
    {
        "name": "net.bytebuddy.utility.JavaModule$Resolver",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.mockito.codegen.ProcessHandle$MockitoMock$35jdf53op99200N",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.mockito.codegen.ProcessHandle$MockitoMock$35jdf53op99200N$auxiliary$4cscpe1S"
    },
    {
        "name": "org.mockito.codegen.ProcessHandle$MockitoMock$35jdf53op99200N$auxiliary$7m9oaq0S"
    },
    {
        "name": "org.mockito.configuration.MockitoConfiguration"
    },
    {
        "name": "org.mockito.internal.configuration.DefaultDoNotMockEnforcer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.mockito.internal.configuration.InjectingAnnotationEngine",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockAccess",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForEquals",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForHashCode",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForStatic",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$Identifier",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher"
    },
    {
        "name": "org.mockito.internal.creation.instance.DefaultInstantiatorProvider",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.mockito.internal.util.ConsoleMockitoLogger",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.mockito.internal.util.reflection.InstrumentationMemberAccessor$Dispatcher",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.mockito.internal.util.reflection.ModuleMemberAccessor",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.NativePRNG",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.security.SecureRandomParameters"
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.SHA",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    }
]